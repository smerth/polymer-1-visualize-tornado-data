var ShaderProgram=function(r,t,e){this.gl_=r,this.attributes={},this.uniforms={},this.vertexShader_=r.createShader(r.VERTEX_SHADER),this.vertexCompiled_=!1,this.fragmentShader_=r.createShader(r.FRAGMENT_SHADER),this.fragmentCompiled_=!1,this.program=r.createProgram(),this.programLinked_=!1,r.attachShader(this.program,this.vertexShader_),r.attachShader(this.program,this.fragmentShader_),t&&this.setVertexShader(t),e&&this.setFragmentShader(e),this.vertexCompiled_&&this.fragmentCompiled_&&this.link()};ShaderProgram.UNIFORM_SETTERS_={5126:"uniform1f",35664:"uniform2f",35665:"uniform3f",35666:"uniform4f",5124:"uniform1i",35667:"uniform2i",35668:"uniform3i",35669:"uniform4i",35670:"uniform1i",35671:"uniform2i",35672:"uniform3i",35673:"uniform4i",35678:"uniform1i",35680:"uniform1i"},ShaderProgram.UNIFORM_MATRIX_SETTERS_={35674:"uniformMatrix2fv",35675:"uniformMatrix3fv",35676:"uniformMatrix4fv"},ShaderProgram.fromXhr=function(r,t,e){var i=new ShaderProgram(r);return Promise.all([ShaderProgram.promiseXhr_(t).then(i.setVertexShader.bind(i)),ShaderProgram.promiseXhr_(e).then(i.setFragmentShader.bind(i))]).then(function(){return i.link(),i})},ShaderProgram.promiseXhr_=function(r){return new Promise(function(t,e){var i=new XMLHttpRequest;i.open("GET",r),i.onload=function(r){200===this.status?t(this.response):e(this.statusText)},i.onerror=function(r){e(this.statusText)},i.send()})},ShaderProgram.prototype.isReady=function(){return this.programLinked_},ShaderProgram.prototype.compileShader_=function(r,t){this.gl_.shaderSource(t,r),this.gl_.compileShader(t);var e=this.gl_.getShaderParameter(t,this.gl_.COMPILE_STATUS);return this.programLinked_=!1,e},ShaderProgram.prototype.setFragmentShader=function(r){if(this.fragmentCompiled_=this.compileShader_(r,this.fragmentShader_),!this.fragmentCompiled_)throw new Error("Fragment shader failed to compile. Log: "+this.getFragmentShaderInfoLog())},ShaderProgram.prototype.setVertexShader=function(r){if(this.vertexCompiled_=this.compileShader_(r,this.vertexShader_),!this.vertexCompiled_)throw new Error("Vertex shader failed to compile. Log: "+this.getVertexShaderInfoLog())},ShaderProgram.prototype.getFragmentShaderInfoLog=function(){return this.gl_.getShaderInfoLog(this.fragmentShader_)},ShaderProgram.prototype.getProgramInfoLog=function(){return this.gl_.getProgramInfoLog(this.program)},ShaderProgram.prototype.getVertexShaderInfoLog=function(){return this.gl_.getShaderInfoLog(this.vertexShader_)},ShaderProgram.prototype.initAttributes_=function(){var r=this.gl_.getProgramParameter(this.program,this.gl_.ACTIVE_ATTRIBUTES);this.attributes={};for(var t=0;t<r;t++){var e=this.gl_.getActiveAttrib(this.program,t),i=this.gl_.getAttribLocation(this.program,e.name);this.attributes[e.name]=i}},ShaderProgram.createUniformSetter_=function(r,t){return function(){Array.isArray(arguments[0])||ArrayBuffer.isView(arguments[0])?t(arguments[0]):r.apply(null,arguments)}},ShaderProgram.prototype.initUniforms_=function(){var r=this.gl_;this.uniforms={};for(var t=r.getProgramParameter(this.program,r.ACTIVE_UNIFORMS),e=0;e<t;e++){var i=r.getActiveUniform(this.program,e),o=i.name,a=r.getUniformLocation(this.program,o);if(ShaderProgram.UNIFORM_SETTERS_[i.type]){var h=ShaderProgram.UNIFORM_SETTERS_[i.type],n=r[h].bind(r,a),m=r[h+"v"].bind(r,a);this.uniforms[o]=ShaderProgram.createUniformSetter_(n,m),this.uniforms[o].set=n,this.uniforms[o].setVec=m,this.uniforms[o].location=a}else{if(!ShaderProgram.UNIFORM_MATRIX_SETTERS_[i.type])throw new Error("Uniform "+o+" has unknown type "+i.type);var s=ShaderProgram.UNIFORM_MATRIX_SETTERS_[i.type];this.uniforms[o]=r[s].bind(r,a,!1),this.uniforms[o].location=a}}},ShaderProgram.prototype.link=function(){if(!this.vertexCompiled_)throw new Error("Current vertex shader has not been compiled");if(!this.fragmentCompiled_)throw new Error("Current vertex shader has not been compiled");if(this.gl_.linkProgram(this.program),this.programLinked_=this.gl_.getProgramParameter(this.program,this.gl_.LINK_STATUS),!this.programLinked_)throw new Error("Program failed to link. Log: "+this.getProgramInfoLog());this.initAttributes_(),this.initUniforms_()},ShaderProgram.prototype.use=function(){this.gl_.useProgram(this.program)},ShaderProgram.prototype.validateProgram=function(){return this.gl_.validateProgram(this.program),this.gl_.getProgramParameter(this.program,this.gl_.VALIDATE_STATUS)};